apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId "com.ysxsoft.user"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath true
            }
        }
        ndk {
            //支持的SO库架构
            abiFilters "armeabi-v7a"
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: "com.ysxsoft.user",
                JPUSH_APPKEY : "2a72b5dec993fed16e7d36fb", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        resConfigs "zh", "zh-rCN"
    }
    signingConfigs {
        release {
            storeFile file("ysxkey.jks")
            storePassword "111111"
            keyAlias "ysx"
            keyPassword "111111"
        }
        debug {
            storeFile file("ysxkey.jks")
            storePassword "111111"
            keyAlias "ysx"
            keyPassword "111111"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release //for debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.release //for debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        disable 'InvalidPackage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets{
        main{
            jniLibs.srcDirs=['libs']
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    implementation project(':common-base')
    //桌面数字
    implementation 'me.leolin:ShortcutBadger:1.1.22@aar'
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
//    implementation files('libs/Msc.jar')
    implementation 'com.yanzhenjie.recyclerview:x:1.3.2'
    implementation 'androidx.viewpager2:viewpager2:1.0.0-beta05'
    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'
    implementation 'com.cncoderx.wheelview:library:1.2.5'

    implementation 'com.github.microshow:RxFFmpeg:2.1.0'

    implementation 'com.camerakit:camerakit:1.0.0-beta3.11'
    implementation 'com.camerakit:jpegkit:0.1.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'

    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
// fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
    implementation 'org.jsoup:jsoup:1.10.2'

    implementation 'q.rorbin:badgeview:1.1.3'
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.4.1'
}
